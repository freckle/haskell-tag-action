name: Haskell tag
description: Creates a tag based on Haskell package version, if missing
inputs:
  package-yaml:
    description: "Path to package.yaml for reading version"
    required: true
    default: ./package.yaml
  tag-prefix:
    description: "Prefix for tags, default is v"
    required: true
    default: v
  github-token:
    description: "Override GitHub token, if necessary"
    required: true
    default: "${{ github.token }}"
outputs:
  tag:
    description: "Tag, if one was created"
    value: ${{ steps.run.outputs.tag }}
  version:
    description: "Version read from package-yaml"
    value: ${{ steps.prep.outputs.result }}
runs:
  using: composite
  steps:
    - id: prep
      uses: mikefarah/yq@v4.28.2
      with:
        cmd: yq eval '.version' '${{ inputs.package-yaml }}'

    - id: run
      name: Run
      shell: bash
      run: |
        if gh api "/repos/{owner}/{repo}/git/ref/tags/$TAG" &>/dev/null; then
          echo "Tag $TAG exists already"
          exit 0
        fi

        gh api '/repos/{owner}/{repo}/git/tags' \
          --method POST \
          --raw-field "tag=$TAG" \
          --raw-field "message=$TAG" \
          --raw-field "object=$SHA" \
          --raw-field "type=commit"

        gh api '/repos/{owner}/{repo}/git/refs' \
          --method POST \
          --raw-field "ref=refs/tags/$TAG" \
          --raw-field "sha=$SHA"

        echo "tag=$TAG" >>"$GITHUB_OUTPUT"
      env:
        SHA: ${{ github.sha }}
        TAG: ${{ inputs.tag-prefix }}${{ steps.prep.outputs.result }}
        GH_TOKEN: ${{ inputs.github-token }}
